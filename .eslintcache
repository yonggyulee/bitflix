[{"C:\\Users\\bit\\Desktop\\bitflix\\src\\index.js":"1","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\App.js":"2","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\GlobalStyles.js":"3","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Header.js":"4","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Router.js":"5","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\index.js":"6","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\index.js":"7","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\index.js":"8","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\index.js":"9","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\DetailContainer.js":"10","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\DetailPresentor.js":"11","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\HomeContainer.js":"12","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\HomePresentor.js":"13","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\TVContainer.js":"14","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\TVPresentor.js":"15","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\SearchContainer.js":"16","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\SearchPresentor.js":"17","C:\\Users\\bit\\Desktop\\bitflix\\src\\api.js":"18","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Message.js":"19","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Loader.js":"20","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Section.js":"21","C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Poster.js":"22"},{"size":157,"mtime":1606873632656,"results":"23","hashOfConfig":"24"},{"size":186,"mtime":1606883755300,"results":"25","hashOfConfig":"24"},{"size":583,"mtime":1606873784258,"results":"26","hashOfConfig":"24"},{"size":1538,"mtime":1606883385852,"results":"27","hashOfConfig":"24"},{"size":943,"mtime":1606889917213,"results":"28","hashOfConfig":"24"},{"size":79,"mtime":1606882611860,"results":"29","hashOfConfig":"24"},{"size":73,"mtime":1606882628833,"results":"30","hashOfConfig":"24"},{"size":85,"mtime":1606876759339,"results":"31","hashOfConfig":"24"},{"size":85,"mtime":1606882638395,"results":"32","hashOfConfig":"24"},{"size":1779,"mtime":1606956956552,"results":"33","hashOfConfig":"24"},{"size":3464,"mtime":1606895772995,"results":"34","hashOfConfig":"24"},{"size":2186,"mtime":1606889914771,"results":"35","hashOfConfig":"24"},{"size":2708,"mtime":1606888807806,"results":"36","hashOfConfig":"24"},{"size":1321,"mtime":1606956610071,"results":"37","hashOfConfig":"24"},{"size":2606,"mtime":1606956854150,"results":"38","hashOfConfig":"24"},{"size":2364,"mtime":1606958496248,"results":"39","hashOfConfig":"24"},{"size":2375,"mtime":1606958123833,"results":"40","hashOfConfig":"24"},{"size":1052,"mtime":1606874596814,"results":"41","hashOfConfig":"24"},{"size":570,"mtime":1606883622463,"results":"42","hashOfConfig":"24"},{"size":383,"mtime":1606883567601,"results":"43","hashOfConfig":"24"},{"size":747,"mtime":1606883699836,"results":"44","hashOfConfig":"24"},{"size":1863,"mtime":1606883674414,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"d1tw85",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\bit\\Desktop\\bitflix\\src\\index.js",[],["94","95"],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\App.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\GlobalStyles.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Header.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Router.js",["96"],"import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nimport Home from \"../routes/Home\";\r\nimport Detail from \"../routes/Detail\";\r\nimport Search from \"../routes/Search\";\r\nimport TV from \"../routes/TV\";\r\n\r\n// 오로지 라우터만 관리하는 컴포넌트가 될 것이다.\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      {/* 기본적으로 Switch가 없이 라우터를 배치하면 모든 라우터를 탄다.\r\n        Switch를 활용하면 오로지 하나의 라우터만 타게 된다. */}\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" exact component={Detail} />\r\n        <Route path=\"/show/:id\" exact component={Detail} />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\index.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\index.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\index.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\index.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\DetailContainer.js",["97"],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Detail\\DetailPresentor.js",["98"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"../../components/Message\";\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresentor = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Bitflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message color=\"#e74c4c\" text={error} />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Ryanflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      ></Backdrop>\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? result.runtime\r\n                : result.runtime == 0\r\n                ? result.runtime\r\n                : result.episode_run_time[0]}{\" \"}\r\n              min\r\n            </Item>\r\n            <Divider>·</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? `${genre.name}`\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresentor.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresentor;\r\n","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\HomeContainer.js",["99","100"],"import React from \"react\";\r\nimport HomePresentor from \"./HomePresentor\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\n// Container의 역할 : Application에서 사용되어지는 기능(함수), 상태(state), 이벤트 폼을\r\n//                    구분 하고, Presentor에 전달\r\n\r\nexport default class extends React.Component {\r\n  // 클래스형 컴포넌트에서 state 만들기\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  // constuctor : 클래스 생성자\r\n  //              생성자의 매개변수로 부모 컴포넌트의 props가 들어온다.\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // 컴포넌트가 부모 컴포넌트에 마운트 됐을 때 호출되는 함수\r\n  // useEffect(() => {}, [])와 같다.\r\n\r\n  // useEffect 에서의 비동기처리와는 다르게, 클래스형 컴포넌트의 componentDidMount에서의\r\n  // 비동기 처리는 앞에 async 키워드를 붙여주면 된다.\r\n  async componentDidMount() {\r\n    try {\r\n      // data -> results에 원하는 내용이 있었음\r\n      // data : { results : [{},{},{},...]}\r\n\r\n      // data안에 있는 results에 들어있는 값을 nowPlaying 변수에 넣겠다.\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"영화 정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  // 함수형 컴포넌트에서 return에 해당된다.\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresentor\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Home\\HomePresentor.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\TVContainer.js",["101","102"],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\TV\\TVPresentor.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\SearchContainer.js",["103","104"],"C:\\Users\\bit\\Desktop\\bitflix\\src\\routes\\Search\\SearchPresentor.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\api.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Message.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Loader.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Section.js",[],"C:\\Users\\bit\\Desktop\\bitflix\\src\\components\\Poster.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":11,"column":1,"nodeType":"111","endLine":26,"endColumn":3},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":71,"endColumn":2},{"ruleId":"113","severity":1,"message":"114","line":116,"column":34,"nodeType":"115","messageId":"116","endLine":116,"endColumn":36},{"ruleId":"109","severity":1,"message":"112","line":8,"column":1,"nodeType":"111","endLine":77,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":20,"column":3,"nodeType":"119","messageId":"120","endLine":22,"endColumn":4},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":61,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":14,"column":3,"nodeType":"119","messageId":"120","endLine":16,"endColumn":4},{"ruleId":"109","severity":1,"message":"112","line":5,"column":1,"nodeType":"111","endLine":88,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":68,"column":3,"nodeType":"119","messageId":"120","endLine":70,"endColumn":4},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]